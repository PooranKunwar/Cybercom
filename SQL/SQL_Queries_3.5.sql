-- CASE 1

CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(255),
    last_name VARCHAR(255),
    email VARCHAR(255),
    phone VARCHAR(20)
);

CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(255),
    unit_price DECIMAL(10, 2),
    description TEXT
);

CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    order_date DATE,
    customer_id INT,
    product_id INT,
    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),
    FOREIGN KEY (product_id) REFERENCES products(product_id)
);

-- 2)Write a query that retrieves the customer's first name, last name, email, and the number of orders they have placed. The results should be ordered by the number of orders in descending order.

SELECT c.first_name, c.last_name, c.email, COUNT(o.order_id) AS num_orders
FROM customers c
LEFT JOIN orders o ON c.customer_id = o.customer_id
GROUP BY c.customer_id, c.first_name, c.last_name, c.email
ORDER BY num_orders DESC;

-- 3)Write a query that retrieves the product name, the total number of orders for each product, and the total revenue generated by each product. The results should be ordered by the total revenue in descending order.

SELECT p.product_name, COUNT(o.order_id) AS num_orders, SUM(p.unit_price) AS total_revenue
FROM products p
LEFT JOIN orders o ON p.product_id = o.product_id
GROUP BY p.product_id, p.product_name
ORDER BY total_revenue DESC;

-- 4)Write a query that retrieves the first name, last name, email, and product name for each order. The results should only include orders where the customer has placed multiple orders.

SELECT c.first_name, c.last_name, c.email, p.product_name
FROM customers c
INNER JOIN orders o ON c.customer_id = o.customer_id
INNER JOIN products p ON o.product_id = p.product_id
WHERE c.customer_id IN (
    SELECT customer_id
    FROM orders
    GROUP BY customer_id
    HAVING COUNT(order_id) > 1
);

-- 5)Write a query that retrieves the first name, last name, and email for each customer who has placed at least one order for a product with a unit price greater than $50.

SELECT c.first_name, c.last_name, c.email
FROM customers c
INNER JOIN orders o ON c.customer_id = o.customer_id
INNER JOIN products p ON o.product_id = p.product_id
WHERE p.unit_price > 50;

-- 6)Write a query that retrieves the product name and the number of times it has been ordered, but only includes products that have been ordered more than once.

SELECT c.first_name, c.last_name, c.email
FROM customers c
INNER JOIN orders o ON c.customer_id = o.customer_id
INNER JOIN products p ON o.product_id = p.product_id
WHERE p.unit_price > 50;
